# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# edit in file power arta fallahpoor

import sys

from PyQt5 import QtCore, QtGui, QtWidgets

from Shape import shape
from point import point
from viwe import viwe

shape1=shape();
shape2=shape();

class Shapes2(object):
    def setupUi(self, F_A_G2):
        F_A_G2.setObjectName("F_A_G2")
        F_A_G2.resize(397, 713)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(F_A_G2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.slider1 = QtWidgets.QSlider(F_A_G2)
        self.slider1.setMaximum(255)
        self.slider1.setProperty("value", 125)
        self.slider1.setOrientation(QtCore.Qt.Vertical)
        self.slider1.setObjectName("slider1")
        self.slider1.valueChanged.connect(self.changeColorRgb)
        self.gridLayout.addWidget(self.slider1, 1, 0, 1, 1)
        self.slider2 = QtWidgets.QSlider(F_A_G2)
        self.slider2.setMaximum(255)
        self.slider2.setProperty("value", 125)
        self.slider2.setOrientation(QtCore.Qt.Vertical)
        self.slider2.setObjectName("slider2")
        self.slider2.valueChanged.connect(self.changeColorRgb)
        self.gridLayout.addWidget(self.slider2, 1, 1, 1, 1)
        self.slider3 = QtWidgets.QSlider(F_A_G2)
        self.slider3.setMaximum(255)
        self.slider3.setProperty("value", 125)
        self.slider3.setSliderPosition(125)
        self.slider3.setOrientation(QtCore.Qt.Vertical)
        self.slider3.setObjectName("slider3")
        self.slider3.valueChanged.connect(self.changeColorRgb)
        self.gridLayout.addWidget(self.slider3, 1, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 21, 0, 1, 1)
        self.err3 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err3.setFont(font)
        self.err3.setText("")
        self.err3.setObjectName("err3")
        self.err3.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err3, 10, 0, 1, 1)
        self.err2 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err2.setFont(font)
        self.err2.setText("")
        self.err2.setObjectName("err2")
        self.err2.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err2, 7, 0, 1, 1)
        self.inputcy = QtWidgets.QLineEdit(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.inputcy.setFont(font)
        self.inputcy.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputcy.textChanged.connect(self.change_inputcy)
        self.inputcy.setText("")
        self.inputcy.setObjectName("inputcy")
        self.gridLayout_2.addWidget(self.inputcy, 16, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 12, 0, 1, 1)
        self.err5 = QtWidgets.QLabel(F_A_G2)
        self.err5.setStyleSheet("color:red;")
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err5.setFont(font)
        self.err5.setText("")
        self.err5.setObjectName("err5")
        self.gridLayout_2.addWidget(self.err5, 17, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 18, 0, 1, 1)
        self.label = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 2, 0, 1, 1)
        self.lablergb = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setBold(True)
        self.lablergb.setFont(font)
        font.setPointSize(12)
        self.lablergb.setFont(font)
        self.lablergb.setStyleSheet("color:rgb(125,125,125);")
        self.lablergb.setAlignment(QtCore.Qt.AlignCenter)
        self.lablergb.setObjectName("lablergb")
        self.gridLayout_2.addWidget(self.lablergb, 19, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(F_A_G2)
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 20, 0, 1, 1)
        self.inputr = QtWidgets.QLineEdit(F_A_G2)
        self.inputr.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputr.textChanged.connect(self.change_inputr)
        self.inputr.setText("")
        self.inputr.setObjectName("inputr")
        self.gridLayout_2.addWidget(self.inputr, 9, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color:#73b6ff;")
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_2.addWidget(self.label_8, 1, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 8, 0, 1, 1)
        self.inputy = QtWidgets.QLineEdit(F_A_G2)
        self.inputy.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputy.textChanged.connect(self.change_inputy)
        self.inputy.setObjectName("inputy")
        self.gridLayout_2.addWidget(self.inputy, 6, 0, 1, 1)
        self.lable_9 = QtWidgets.QLabel(F_A_G2)
        self.gridLayout_2.addWidget(self.lable_9,22, 0, 1, 1)
        self.btnshow = QtWidgets.QPushButton(F_A_G2)
        self.btnshow.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnshow.setFont(font)
        self.btnshow.setStyleSheet("height:30px;\n"
"border-radius:6%;\n"
"background-color:#73b6ff;\n"
"color: #fff;\n"
"")
        self.btnshow.clicked.connect(self.btn_Show)
        self.btnshow.setObjectName("btnshow")
        self.gridLayout_2.addWidget(self.btnshow, 23, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.err1 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err1.setFont(font)
        self.err1.setText("")
        self.err1.setObjectName("err1")
        self.err1.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err1, 4, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 15, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 5, 0, 1, 1)
        self.inputcx = QtWidgets.QLineEdit(F_A_G2)
        self.inputcx.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputcx.textChanged.connect(self.change_inputcx)
        self.inputcx.setText("")
        self.inputcx.setObjectName("inputcx")
        self.gridLayout_2.addWidget(self.inputcx, 13, 0, 1, 1)
        self.err4 = QtWidgets.QLabel(F_A_G2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err4.setFont(font)
        self.err4.setText("")
        self.err4.setObjectName("err4")
        self.err4.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err4, 14, 0, 1, 1)
        self.inputx = QtWidgets.QLineEdit(F_A_G2)
        self.inputx.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputx.textChanged.connect(self.change_inputx)
        self.inputx.setObjectName("inputx")
        self.gridLayout_2.addWidget(self.inputx, 3, 0, 1, 1)
        self.btncheck = QtWidgets.QPushButton(F_A_G2)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btncheck.setFont(font)
        self.btncheck.setStyleSheet("height:30px;\n"
"border-radius:6%;\n"
"background-color:#73b6ff;\n"
"color: #fff;\n"
"")
        self.btncheck.clicked.connect(self.btn_Back_Main)
        self.btncheck.setObjectName("btncheck")
        self.gridLayout_2.addWidget(self.btncheck, 24, 0, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout_2)

        

        self.retranslateUi(F_A_G2)
        QtCore.QMetaObject.connectSlotsByName(F_A_G2)

    def retranslateUi(self, F_A_G2):
        _translate = QtCore.QCoreApplication.translate
        F_A_G2.setWindowTitle(_translate("F_A_G2", "G1 Create Shapes 2"))
        self.label_6.setText(_translate("F_A_G2", "مرکز شکل در مختصات X :"))
        self.label_4.setText(_translate("F_A_G2", "رنگ شکل :"))
        self.label.setText(_translate("F_A_G2", "ضلع x :"))
        self.lablergb.setText(_translate("F_A_G2", "rgb(125,125,125)"))
        self.label_8.setText(_translate("F_A_G2", "خوش آمدید"))
        self.label_3.setText(_translate("F_A_G2", "شعاع دایره :"))
        self.btnshow.setText(_translate("F_A_G2", "شکل جدید و قبلی را به من نشان بده"))
        self.label_7.setText(_translate("F_A_G2", "مرکز شکل در مختصات Y :"))
        self.label_2.setText(_translate("F_A_G2", "ضلع Y :"))
        self.btncheck.setText(_translate("F_A_G2", "برگشت به صفحه قبل"))
    #function -1- 
    def changeColorRgb(self):
        self.lablergb.setText(f"rgb({self.slider1.value()},{self.slider2.value()},{self.slider3.value()})")
        self.lablergb.setStyleSheet(f"color : rgb({self.slider1.value()},{self.slider2.value()},{self.slider3.value()});")
    def btn_Show(self):
        if (self.change_inputcx() and self.change_inputcy()) and ((self.change_inputy() and self.change_inputx()) or  self.change_inputr() ):
                F_A_G2.hide()
                global shape2
                global shape1
                if self.inputr.text()== "":
                        shape2=shape(x=int(self.inputx.text()),y=int(self.inputy.text()) ,c=point(int(self.inputcx.text()),int(self.inputcy.text())),color=self.lablergb.text())
                else :
                        shape2=shape(r=int(self.inputr.text()) ,c=point(int(self.inputcx.text()),int(self.inputcy.text())),color=self.lablergb.text())
                viwe(F_A_G1,shape1,shape2)
    def btn_Back_Main(self):
                F_A_G1.show()
                F_A_G2.hide()
                
           
    # change inputs and check the value 2 in (x,y) center    
    def change_inputcx(self):
        text = [i for i in self.inputcx.text()] 
        flag2 =True
        if len(text)==1:
                if text[0] == "-":
                       text = [] 
        if len(text)==2:
                if text[0] == "-":
                        text = text[1:len(text)] 
                elif text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err4.setText("عدد اول نمیتواند صفر باشد.")  
        if len(text)==3:
                if text[0] == "-":
                        text = text[1:len(text)] 
                if text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err4.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>3:
                if text[0] == "-":
                        if text[1]=="0"  :
                                flag2=False
                                self.err4.setText("عدد اول نمیتواند صفر باشد.")
                        text = text[1:len(text)] 
                if text[0]=="0" :
                        flag2=False
                        self.err4.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err4.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 
        

        if numerr>0 :
                
                self.err4.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err4.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    def change_inputcy(self):
        text = [i for i in self.inputcy.text()] 
        flag2 =True
        if len(text)==1:
                if text[0] == "-":
                       text = [] 
        if len(text)==2:
                if text[0] == "-":
                        text = text[1:len(text)]  
                elif text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err5.setText("عدد اول نمیتواند صفر باشد.")       
        if len(text)==3:
                if text[0] == "-":
                        text = text[1:len(text)] 
                if text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err5.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>3:
                if text[0] == "-":
                        if text[1]=="0"  :
                                flag2=False
                                self.err5.setText("عدد اول نمیتواند صفر باشد.")
                        text = text[1:len(text)] 
                if text[0]=="0" :
                        flag2=False
                        self.err5.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err5.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(list(range(0,10)) + ["."]) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 

        if numerr>0 :
               
                self.err5.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err5.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    # functions change inputs and check the value 2 in (h = y , w = x) 
    def change_inputx(self):
        text = [i for i in self.inputx.text()] 
        if(len(text)>0):
                self.inputr.clear()
        flag2 =True
        if len(text)==1:
                if text[0]=="0":
                        flag2=False
                        self.err1.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>1:
                if text[0]=="0":
                        flag2=False
                        self.err1.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err1.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 
        
        if numerr>0 :
                
                self.err1.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err1.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    def change_inputy(self):
        text = [i for i in self.inputy.text()] 
        if(len(text)>0):
                self.inputr.clear()
        flag2 =True
        if len(text)==1:
                if text[0]=="0":
                        flag2=False
                        self.err2.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>1:
                if text[0]=="0":
                        flag2=False
                        self.err2.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err2.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 

        if numerr>0 :
                
                self.err2.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err2.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    def change_inputr(self):
        text = [i for i in self.inputr.text()] 
        if(len(text)>0):
                self.inputx.clear()
                self.inputy.clear()
        flag2 =True
        if len(text)==1:
                if text[0]=="0":
                        flag2=False
                        self.err3.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>1:
                if text[0]=="0":
                        flag2=False
                        self.err3.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err3.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 

        if numerr>0 :
                
                self.err3.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err3.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False

#Main Class App
class Main(object):
    def setupUi(self, F_A_G1):
        F_A_G1.setObjectName("F_A_G1")
        F_A_G1.resize(397, 713)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(F_A_G1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.slider1 = QtWidgets.QSlider(F_A_G1)
        self.slider1.setMaximum(255)
        self.slider1.setProperty("value", 125)
        self.slider1.setOrientation(QtCore.Qt.Vertical)
        self.slider1.setObjectName("slider1")
        self.slider1.valueChanged.connect(self.changeColorRgb)
        self.gridLayout.addWidget(self.slider1, 1, 0, 1, 1)
        self.slider2 = QtWidgets.QSlider(F_A_G1)
        self.slider2.setMaximum(255)
        self.slider2.setProperty("value", 125)
        self.slider2.setOrientation(QtCore.Qt.Vertical)
        self.slider2.setObjectName("slider2")
        self.slider2.valueChanged.connect(self.changeColorRgb)
        self.gridLayout.addWidget(self.slider2, 1, 1, 1, 1)
        self.slider3 = QtWidgets.QSlider(F_A_G1)
        self.slider3.setMaximum(255)
        self.slider3.setProperty("value", 125)
        self.slider3.setSliderPosition(125)
        self.slider3.setOrientation(QtCore.Qt.Vertical)
        self.slider3.setObjectName("slider3")
        self.slider3.valueChanged.connect(self.changeColorRgb)
        self.gridLayout.addWidget(self.slider3, 1, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 21, 0, 1, 1)
        self.err3 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err3.setFont(font)
        self.err3.setText("")
        self.err3.setObjectName("err3")
        self.err3.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err3, 10, 0, 1, 1)
        self.err2 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err2.setFont(font)
        self.err2.setText("")
        self.err2.setObjectName("err2")
        self.err2.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err2, 7, 0, 1, 1)
        self.inputcy = QtWidgets.QLineEdit(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.inputcy.setFont(font)
        self.inputcy.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputcy.textChanged.connect(self.change_inputcy)
        self.inputcy.setText("")
        self.inputcy.setObjectName("inputcy")
        self.gridLayout_2.addWidget(self.inputcy, 16, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 12, 0, 1, 1)
        self.err5 = QtWidgets.QLabel(F_A_G1)
        self.err5.setStyleSheet("color:red;")
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err5.setFont(font)
        self.err5.setText("")
        self.err5.setObjectName("err5")
        self.gridLayout_2.addWidget(self.err5, 17, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 18, 0, 1, 1)
        self.label = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 2, 0, 1, 1)
        self.lablergb = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setBold(True)
        self.lablergb.setFont(font)
        font.setPointSize(12)
        self.lablergb.setFont(font)
        self.lablergb.setStyleSheet("color:rgb(125,125,125);")
        self.lablergb.setAlignment(QtCore.Qt.AlignCenter)
        self.lablergb.setObjectName("lablergb")
        self.gridLayout_2.addWidget(self.lablergb, 19, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(F_A_G1)
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 20, 0, 1, 1)
        self.inputr = QtWidgets.QLineEdit(F_A_G1)
        self.inputr.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputr.textChanged.connect(self.change_inputr)
        self.inputr.setText("")
        self.inputr.setObjectName("inputr")
        self.gridLayout_2.addWidget(self.inputr, 9, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color:#73b6ff;")
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_2.addWidget(self.label_8, 1, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 8, 0, 1, 1)
        self.inputy = QtWidgets.QLineEdit(F_A_G1)
        self.inputy.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputy.textChanged.connect(self.change_inputy)
        self.inputy.setObjectName("inputy")
        self.gridLayout_2.addWidget(self.inputy, 6, 0, 1, 1)
        self.lable_9 = QtWidgets.QLabel(F_A_G1)
        self.gridLayout_2.addWidget(self.lable_9,22, 0, 1, 1)
        self.btnshow = QtWidgets.QPushButton(F_A_G1)
        self.btnshow.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnshow.setFont(font)
        self.btnshow.setStyleSheet("height:30px;\n"
"border-radius:6%;\n"
"background-color:#73b6ff;\n"
"color: #fff;\n"
"")
        self.btnshow.clicked.connect(self.btn_Show)
        self.btnshow.setObjectName("btnshow")
        self.gridLayout_2.addWidget(self.btnshow, 23, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.err1 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err1.setFont(font)
        self.err1.setText("")
        self.err1.setObjectName("err1")
        self.err1.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err1, 4, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 15, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 5, 0, 1, 1)
        self.inputcx = QtWidgets.QLineEdit(F_A_G1)
        self.inputcx.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputcx.textChanged.connect(self.change_inputcx)
        self.inputcx.setText("")
        self.inputcx.setObjectName("inputcx")
        self.gridLayout_2.addWidget(self.inputcx, 13, 0, 1, 1)
        self.err4 = QtWidgets.QLabel(F_A_G1)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.err4.setFont(font)
        self.err4.setText("")
        self.err4.setObjectName("err4")
        self.err4.setStyleSheet("color:red;")
        self.gridLayout_2.addWidget(self.err4, 14, 0, 1, 1)
        self.inputx = QtWidgets.QLineEdit(F_A_G1)
        self.inputx.setStyleSheet("height:25px;\n"
"border-radius:3%;\n"
"font-size:11px;\n"
"border:1px solid #6eb1ff;")
        self.inputx.textChanged.connect(self.change_inputx)
        self.inputx.setObjectName("inputx")
        self.gridLayout_2.addWidget(self.inputx, 3, 0, 1, 1)
        self.btncheck = QtWidgets.QPushButton(F_A_G1)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btncheck.setFont(font)
        self.btncheck.setStyleSheet("height:30px;\n"
"border-radius:6%;\n"
"background-color:#73b6ff;\n"
"color: #fff;\n"
"")
        self.btncheck.clicked.connect(self.btn_Check)
        self.btncheck.setObjectName("btncheck")
        self.gridLayout_2.addWidget(self.btncheck, 24, 0, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout_2)
        self.retranslateUi(F_A_G1)
        QtCore.QMetaObject.connectSlotsByName(F_A_G1)

    def retranslateUi(self, F_A_G1):
        _translate = QtCore.QCoreApplication.translate
        F_A_G1.setWindowTitle(_translate("F_A_G1", "G1 Create Shapes"))
        self.label_6.setText(_translate("F_A_G1", "مرکز شکل در مختصات X :"))
        self.label_4.setText(_translate("F_A_G1", "رنگ شکل :"))
        self.label.setText(_translate("F_A_G1", "ضلع x :"))
        self.lablergb.setText(_translate("F_A_G1", "rgb(125,125,125)"))
        self.label_8.setText(_translate("F_A_G1", "خوش آمدید"))
        self.label_3.setText(_translate("F_A_G1", "شعاع دایره :"))
        self.btnshow.setText(_translate("F_A_G1", "شکل را به من نشان بده"))
        self.label_7.setText(_translate("F_A_G1", "مرکز شکل در مختصات Y :"))
        self.label_2.setText(_translate("F_A_G1", "ضلع Y :"))
        self.btncheck.setText(_translate("F_A_G1", "بررسی شکل با شکل دیگر"))
    #function -1- 
    def changeColorRgb(self):
        self.lablergb.setText(f"rgb({self.slider1.value()},{self.slider2.value()},{self.slider3.value()})")
        self.lablergb.setStyleSheet(f"color : rgb({self.slider1.value()},{self.slider2.value()},{self.slider3.value()});")
    def btn_Show(self):
        if (self.change_inputcx() and self.change_inputcy()) and ((self.change_inputy() and self.change_inputx()) or  self.change_inputr()):
                F_A_G1.hide()
                global shape1
                if self.inputr.text()== "":
                        shape1=shape(x=int(self.inputx.text()),y=int(self.inputy.text()) ,c=point(int(self.inputcx.text()),int(self.inputcy.text())),color=self.lablergb.text())
                else :
                        shape1=shape(r=int(self.inputr.text()) ,c=point(int(self.inputcx.text()),int(self.inputcy.text())),color=self.lablergb.text())
                viwe(F_A_G1,shape1)
    def btn_Check(self):
        if (self.change_inputcx() and self.change_inputcy()) and ((self.change_inputy() and self.change_inputx()) or  self.change_inputr() ):
                global shape1
                if self.inputr.text()== "":
                        shape1=shape(x=int(self.inputx.text()),y=int(self.inputy.text()) ,c=point(int(self.inputcx.text()),int(self.inputcy.text())),color=self.lablergb.text())
                else :
                        shape1=shape(r=int(self.inputr.text()) ,c=point(int(self.inputcx.text()),int(self.inputcy.text())),color=self.lablergb.text())
                F_A_G1.hide()
                F_A_G2.show()

    # change inputs and check the value 2 in (x,y) center    
    def change_inputcx(self):
        text = [i for i in self.inputcx.text()] 
        flag2 =True
        if len(text)==1:
                if text[0] == "-":
                       text = [] 
        if len(text)==2:
                if text[0] == "-":
                        text = text[1:len(text)] 
                elif text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err4.setText("عدد اول نمیتواند صفر باشد.")  
        if len(text)==3:
                if text[0] == "-":
                        text = text[1:len(text)] 
                if text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err4.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>3:
                if text[0] == "-":
                        if text[1]=="0"  :
                                flag2=False
                                self.err4.setText("عدد اول نمیتواند صفر باشد.")
                        text = text[1:len(text)] 
                if text[0]=="0" :
                        flag2=False
                        self.err4.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err4.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 

        if numerr>0 :
                
                self.err4.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err4.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    def change_inputcy(self):
        text = [i for i in self.inputcy.text()] 
        flag2 =True
        if len(text)==1:
                if text[0] == "-":
                       text = [] 
        if len(text)==2:
                if text[0] == "-":
                        text = text[1:len(text)]  
                elif text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err5.setText("عدد اول نمیتواند صفر باشد.")       
        if len(text)==3:
                if text[0] == "-":
                        text = text[1:len(text)] 
                if text[0]=="0" and text[1]!="0" :
                        flag2=False
                        self.err5.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>3:
                if text[0] == "-":
                        if text[1]=="0"  :
                                flag2=False
                                self.err5.setText("عدد اول نمیتواند صفر باشد.")
                        text = text[1:len(text)] 
                if text[0]=="0" :
                        flag2=False
                        self.err5.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err5.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(list(range(0,10)) + ["."]) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 
        
        if numerr>0 :
                self.err5.setText("خطا : لطفا عدد وارد کنید.")
        
        if(len(text)>0 and flag2):
                
                return True
        else:
                
                return False
        
    # functions change inputs and check the value 2 in (h = y , w = x) 
    def change_inputx(self):
        
        text = [i for i in self.inputx.text()] 
        if(len(text)>0):
                self.inputr.clear()
        flag2 =True
        if len(text)==1:
                if text[0]=="0":
                        flag2=False
                        self.err1.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>1:
                if text[0]=="0":
                        flag2=False
                        self.err1.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err1.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 
        
        if numerr>0 :
                
                self.err1.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err1.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    def change_inputy(self):
        
        text = [i for i in self.inputy.text()] 
        if(len(text)>0):
                self.inputr.clear()
        flag2 =True
        if len(text)==1:
                if text[0]=="0":
                        flag2=False
                        self.err2.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>1:
                if text[0]=="0":
                        flag2=False
                        self.err2.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err2.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 

        if numerr>0 :
               
                self.err2.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err2.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False
    def change_inputr(self):
        text = [i for i in self.inputr.text()] 
        if(len(text)>0):
                self.inputx.clear()
                self.inputy.clear()
        flag2 =True
        if len(text)==1:
                if text[0]=="0":
                        flag2=False
                        self.err3.setText("عدد اول نمیتواند صفر باشد.")
        if len(text)>1:
                if text[0]=="0":
                        flag2=False
                        self.err3.setText("عدد اول نمیتواند صفر باشد.")
        if len(text) <1:
                self.err3.setText("")
        flag = True
        numerr=0
        for i in text:
                flag=True
                for j in list(range(0,10)) + ["."]:
                        if str(j) == i:
                              flag = False
                if flag:
                      numerr += 1 

        if numerr>0 :
                
                self.err3.setText("خطا : لطفا عدد وارد کنید.")
        if numerr==0 and flag2:
                
                self.err3.setText("")
        if(len(text)>0 and flag2):
                return True
        else:
                return False

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    F_A_G1 = QtWidgets.QWidget()
    ui = Main()
    ui.setupUi(F_A_G1)
    F_A_G2 = QtWidgets.QWidget()
    ui1 = Shapes2()
    ui1.setupUi(F_A_G2)
    F_A_G1.show()
    F_A_G2.hide()
    sys.exit(app.exec_())
